# 部署名称随意
name: 自动发布-auto-deploy-hexo
# 触发条件：在 push 到 master 分支后触发
on:
  push:
    branches: 
      - master  # 可以添加多个分支
# 设置时区
env:
  TZ: Asia/Shanghai

# 任务
jobs:
  blog-deploy:
  
    name: Hexo blog build & deploy

    runs-on: ubuntu-latest # 使用最新的 Ubuntu 系统作为编译部署的环境
    
    steps:
      - name: Checkout codes
        uses: actions/checkout@v3
        with:
          submodules: true # 加载子模块，避免初始化过程中的额外加载。

      - name: Setup node
        # 设置 node.js 环境
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      # 下载网站源码
      - name: Cache node modules
        # 设置包缓存目录，避免每次下载
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      # 安装依赖
      - name: Install dependencies
        run: |
          apt-get install g++ build-essential
          npm install
          npm ls --depth 0

      #  编译生成网站
      - name: Generate files
        # 编译 markdown 文件
        run: |
          npm run build

      # 自动发布到当前仓库的gh-pages分支，如需部署到其它仓库的，参考下面文档修改配置即可
      # 更多高级用法查看文档，https://github.com/peaceiris/actions-gh-pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          # 1.如何生成 github_token，github主页,Settings / Developer settings / Personal access tokens (classic)
          # 2.github_token 在 仓库 Settings,Actions secrets and variables,设置
          # github_token: ${{ secrets.ACCESS_TOKEN }} 无需自定义 
          # GITHUB_TOKEN secret to authenticate in your workflow. So, you can start to deploy immediately without any configuration.
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

          # Deploy to external repository external_repository
          # 发布到其他仓库的配置，注意必须使用deploy_key，获取和设置方法同上。
          #deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          #external_repository: username/external-repository
          #publish_branch: your-branch  # default: gh-pages
          #publish_dir: ./public

          # 以下配置可忽略，测试功能，设置提交信息相关配置
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.event.head_commit.message }}
          #full_commit_message: ${{ github.event.head_commit.message }}
          tag_name: ${{ steps.prepare_tag.outputs.DEPLOY_TAG_NAME }}
          tag_message: 'Deployment ${{ github.ref_name }}'
